name: Build docker image

on:
  push:
    branches:
      - master

    tags:
      - '*'

  pull_request:

env:
  PHP84: '8.4.13'
  PHP83: '8.3.26'
  PHP82: '8.2.29'
  PHP81: '8.1.33'
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      php-versions: ${{ steps.set-matrix.outputs.php-versions }}
    steps:
      - id: set-matrix
        run: |
          cat << 'EOF' > versions.json
          [
            {"key": "php84", "version": "${{ env.PHP84 }}", "workdir": "8", "latest": true, "latest_major": true},
            {"key": "php83", "version": "${{ env.PHP83 }}", "workdir": "8", "latest": false, "latest_major": false},
            {"key": "php82", "version": "${{ env.PHP82 }}", "workdir": "8", "latest": false, "latest_major": false},
            {"key": "php81", "version": "${{ env.PHP81 }}", "workdir": "8", "latest": false, "latest_major": false}
          ]
          EOF
          echo "php-versions=$(cat versions.json | jq -c .)" >> $GITHUB_OUTPUT

  build:
    needs: setup
    strategy:
      matrix:
        php: ${{ fromJson(needs.setup.outputs.php-versions) }}
        arch:
          - amd64
          - arm64
        dev:
          - ''
          - '1'
        user_id:
          - 1000
          - 501
        include:
          - arch: amd64
            runner: ubuntu-24.04
          - arch: arm64
            runner: ubuntu-24.04-arm
          - user_id: 501
            group_id: 20
            dev: 1
        exclude:
          - dev: ''
            user_id: 501
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v5
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build and push
        env:
          PHP_VER: ${{ matrix.php.version }}
          ARCH: ${{ matrix.arch }}
          PHP_DEV: ${{ matrix.dev }}
          WODBY_USER_ID: ${{ matrix.user_id }}
          WODBY_GROUP_ID: ${{ matrix.group_id }}
        working-directory: ${{ matrix.php.workdir }}
        run: |
          make
          make test
          make push

  push:
    runs-on: ubuntu-latest
    needs:
      - setup
      - build
    strategy:
      matrix:
        php: ${{ fromJson(needs.setup.outputs.php-versions) }}
        dev:
          - ''
          - '1'
        user_id:
          - 1000
          - 501
        exclude:
          - dev: ''
            user_id: 501
    steps:
      - uses: actions/checkout@v5
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: ./.github/actions
        with:
          version: ${{ matrix.php.version }}
          workdir: ${{ matrix.php.workdir }}
          dev: ${{ matrix.dev }}
          user_id: ${{ matrix.user_id }}
          latest: ${{ matrix.php.latest }}
          latest_major: ${{ matrix.php.latest_major }}
